#include<stdio.h>            /* this program simply reads values.txt and polynomial.txt files in main function  into corresponding char arrays and then calls function pol_manipulation()*/
#include<math.h>   			/*by sending certain entities to it and calculates the polynomial in each iteration adn pol_manipulation() function check for (in this case for five combinations */
#define ARR_SIZE 100		/*posibilities in  each monom and ckeck according to that possible monom formats and calculates the monom and finally the hole polynom and writes if into evaluation.txt file). */
#define ST_SIZE 1000
void pol_manipulation(FILE *outp,double val_arr[ST_SIZE],char pol_arr[ARR_SIZE],char testarr[ARR_SIZE],int counter);

int main(){
	
	FILE *val,*pol,*outp;//file pointers fo reach file
	
	double val_arr[ARR_SIZE],num;
	int i = 0,status = 0,each_time = 0,my_test = 0,val_arr_lenght;//declalring some variables all have been used in the program impliminration.
	char poll[ST_SIZE],testa[ST_SIZE],ch;

	val = fopen("values.txt","r");//opening files (last three lines down)
	pol = fopen("polynomial.txt","r");
	outp = fopen("evaluations.txt","w");

	while(!feof(val)){//reading from the file values.txt

		status = fscanf(val,"%lf",&num);
		
		if (status == 1){//ignores the any possible error like end of file
			
			val_arr[i++] = num;

		}
		
	}//end of while loop
	val_arr_lenght = i;

	i = 0;//set i zero so that can be used in down operations also.
	
	while(!feof(pol)){//this loop iterates untill end file polynomial.txt and stores the content of it in pol_arr[].
		
		status = fscanf(pol,"%c",&ch);
		
		if (status == 1 && ch!= ' '){//if statment ignores the white spaces 
			
			testa[i] = ch;//test array is a identical parralel array of pol_arr has been used to manipulate the desured operarion
			poll[i] = ch;
			i++;			
		}

	}//end of while loop
	
	poll[i] = '\0';//set the end of array as null
	testa[i] = '\0';//set the end of array as null
	
	while(each_time < val_arr_lenght){
		
	 	pol_manipulation(outp,val_arr,poll,testa,each_time);

	 	each_time++;
	
	}

	fclose(val);//closing corresponding files.
	fclose(pol);//closing corresponding files.
	fclose(outp);//closing corresponding files.
	
	return 0;

}//end of main
void pol_manipulation(FILE *outp,double val_arr[ST_SIZE],char pol_arr[ARR_SIZE],char testarr[ARR_SIZE],int counter)//this function takes output fiel ppointer and assighs the outputs to it and also takes an array which holds the valus  on it and an othe array which holds the polymonial schema on it and takes in each time a number and accordig to that number
{

	double result = 0,coo,total = 0;
	
	int i = 0,status = 0,founded1 = 0,founded2 = 0,founded3 = 0,founded4 = 0,my_test = 0,k = 0,expo,lent,sign_marked = 0;//declalring some variables all have been used in the program impliminration.
	
	char x,star,ch,tem_ch,first_char;

	while(pol_arr[i]!= '\0')//this loop iterates untill the null char has benn encountered in pol_arr[].                        
	{	
		

		if (i == 0){//this if statement execute only one and very fist time in each call of functin just for conferming that thre is any sigh at beggening of the polynomial if there is any sign then works according to that marks that it has found a sign in the beggining of the corresponding polynomial and awares down one execution about it.
			
			sscanf(&pol_arr[0],"%c",&first_char);//taking very first charracter of the polynomial.
			
			if (first_char == '-'){
			
				i++;
				k++;
				sign_marked = (-1);		
			}
			
			else if(first_char == '+'){
			
				i++;
				k++;		
				sign_marked = (1);
			}
		
		}		

		while((pol_arr[i]!='+' && pol_arr[i] != '-') && pol_arr[i]!='\0')//this loop iterates untill it encounters plus or minus sign or end of file.
		{
			status = sscanf(&pol_arr[i],"%lf%c%c%d",&coo,&x,&star,&expo);//takes a monom in the format of (ax^n) 

			if((status == 4) && (star == '^' && x == 'x' && pol_arr[i]!='\0')){//FIRST CONDITIONcheck if we take the correct format then execute the inner part 
				
				while(testarr[k]!='+' && testarr[k] !='-'&&testarr[k]!='\0'){//this loop which has been used in the last four conditions also play the importand rule of the program :it goes untill a + of - occured and finds its lent and store is in k and se used down as next starting poini of or val_arr[].

					k++;//lent of each monum.
				}
			
				result = coo * pow(val_arr[counter],expo);//result of each momon between any possible + and - sigh in  given polynomial
				
				if (pol_arr[k]!='\0'){//takes one operator from pol_arr
			
					sscanf(&pol_arr[k],"%c",&ch); 
				}
			
				founded1 = 1;//if we succssed to get desired format then mark as 1 so that we need not to checkk other cobinitions in the certain iteration ;	
			}//end of 1TH condtion

			status = sscanf(&pol_arr[i],"%c%c%d",&x,&star,&expo);//2TH taking input from pol_arr[i] in the format (x^n);
			
			if(status == 3 && founded1 == 0 && x == 'x' && star == '^' && pol_arr[i]!='\0'){//if we are successd in takig input in the desired foramt so implement if
			
				if(status == 3 && pol_arr[i]!='\0'){
					
					while(testarr[k]!='+' && testarr[k] !='-' && testarr[k]!='\0'){//this loop's work has been described in the FIRST condition

						k++;//lent of each monum.
					}
				}

				result = pow(val_arr[counter],expo);//result of each momon between any possible + and - sigh in  given polynomial
				
				if(pol_arr[k]!='\0'){
				
					sscanf(&pol_arr[k],"%c",&ch);//takes one operator from pol_arr
				}

				founded2 = 1;//if we succssed to get desired format then mark as 1 so that we need not to checkk other cobinitions in the certain iteration ;	
			}//end of 2TH condition

			status = sscanf(&pol_arr[i],"%lf%c",&coo,&x);//takes a monom in the format of  (ax).
		
			if (status == 2 &&founded1 == 0 && x == 'x'&& star!='^'){//3TH condition to check if have success to take the monom in desired format.
				
				if(status == 2 && star!='^'&& x == 'x' && pol_arr[i]!='\0'){//also chechs the end of file
				
					while(testarr[k]!='+' && testarr[k] !='-'&&testarr[k]!='\0'){//has been described prevously.

						k++;//lent of each monum.
					}
			
					result = (val_arr[counter] * coo);//result of each momon between any possible + and - sigh in  given polynomial
					if(pol_arr[k]!='\0'){
			
						sscanf(&pol_arr[k],"%c",&ch);//takes one operator from pol_arr
					}

				}
					
				founded3 = 1;//if we succssed to get desired format then mark as 1 so that we need not to checkk other cobinitions in the certain iteration ;				
			}//end of 3TH condition.

			status = sscanf(&pol_arr[i],"%c",&x);//takes  a monom in the format of (x).
			
			if(status == 1 && founded2 == 0 && founded1 == 0 && x == 'x'&& pol_arr[i+1]!='^' && pol_arr[i]!='\0'){//4TH condition to check if have success to take the monom in desired format.			

				if(status == 1 &&founded1 == 0&&founded2 == 0&& x == 'x'&& pol_arr[i+1]!='^'&& pol_arr[i]!='\0'){//check also.

					while(testarr[k]!='+' && testarr[k] !='-' && testarr[k]!='\0'){

						k++;//lent of each monum.
					}
				
					result = val_arr[counter];//result of each momon between any possible + and - sigh in  given polynomial

					if(pol_arr[k]!='\0'){
				
						sscanf(&pol_arr[k],"%c",&ch);//takes one operator from pol_arr
					}
									
				}
				founded4 = 1;//if we succssed to get desired format then mark as 1 so that we need not to checkk other cobinitions in the certain iteration ;	
			}//end of 4TH condition.
					
			status = sscanf(&pol_arr[i],"%lf",&coo);//takes in the format of (a).

			if(status == 1 && founded1 == 0 && founded3 == 0 && founded2 == 0 && pol_arr[i]!='\0'){//5TH condition to check if we got the desired format from the array.

				if (status == 1 && pol_arr[i]!='\0'){	
				
					while(testarr[k]!='+' && testarr[k] !='-' && testarr[k]!='\0'){

						k++;//lent of each monum.
					}
				
				}
		
				result = coo;//result of each momon between any possible + and - sigh in  given polynomial

				if(pol_arr[k]!='\0'){//takes the operator
				
					sscanf(&pol_arr[k],"%c",&ch);
				}
			}//end of 5TH condition

			if (my_test == 0){//store the operator of the fist time to be used in the next itratiin  to add or subtract of tow next numbers whith the fist number. 
				
				if (sign_marked == 1){
				
					total  = result;//this is the very  monom's result to be used in the next iteration
					
				}
				else if (sign_marked == -1){
					
					total  = (-1) * result;//this is the very  monom's result to be used in the next iteration
					
				}
				else if (sign_marked == 0){

					total  = result;//this is the very  monom's result to be used in the next iteration
					
				}

				tem_ch = ch;					

			}
			else //if (my_test!=0){ //this else will be operated or true the rest of monom till the end of polynomial in the certain itration
			{	
				if (tem_ch == '+'){//add two num if the sign is plus
					
					total = total+result;
					result = 0;
				
				}
				else if (tem_ch=='-'){//subtract two if the sign is minus.
					
					total = total - result;
					result = 0;
				
				}

				tem_ch = ch;
			}

			i = ++k;//points to the next monom's position in the pol_arr  array.
			
			my_test = 1;

			founded1 = 0;founded2 = 0;founded3 = 0;founded4 = 0;//setting them as zero so that to be used again in the next iterations.
		
		}

		fprintf(outp,"%.2lf\n",total);//assigning to the output file the final result.
		
		sign_marked = 0;	
		founded1 = 0;founded2 = 0;founded3 = 0;founded4 = 0;//setting them as zero so that to be used again in the next iterations.
			
	}//end of first loop	

}//end of function
